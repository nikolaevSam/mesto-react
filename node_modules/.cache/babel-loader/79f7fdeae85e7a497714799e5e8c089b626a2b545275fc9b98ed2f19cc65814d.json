{"ast":null,"code":"import { apiConfig } from \"./utils.js\";\nclass Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._dataUrl = baseUrl;\n    this._headers = headers;\n  }\n  _checkStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getInitialCards() {\n    return fetch(`${this._dataUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n  getUserInfo() {\n    return fetch(`${this._dataUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n  setUserInfo(data) {\n    return fetch(`${this._dataUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._checkStatus(res));\n  }\n  addCard(data) {\n    return fetch(`${this._dataUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._checkStatus(res));\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._dataUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n  addLike(cardId) {\n    return fetch(`${this._dataUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._dataUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n  setAvatar(data) {\n    return fetch(`${this._dataUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._checkStatus(res));\n  }\n}\n;\nconst api = new Api(apiConfig);\nexport default api;","map":{"version":3,"names":["apiConfig","Api","constructor","_ref","baseUrl","headers","_dataUrl","_headers","_checkStatus","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","getUserInfo","setUserInfo","data","method","body","JSON","stringify","name","about","addCard","link","deleteCard","cardId","addLike","deleteLike","setAvatar","avatar","api"],"sources":["/Users/nikolay/dev/mesto-react/src/utils/api.js"],"sourcesContent":["import { apiConfig } from \"./utils.js\";\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this._dataUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkStatus(res) {\n    if (res.ok) {\n      return res.json();\n    } return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._dataUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this._dataUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._dataUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._checkStatus(res));\n  }\n\n  addCard(data) {\n    return fetch(`${this._dataUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._checkStatus(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._dataUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._dataUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._dataUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  setAvatar(data) {\n    return fetch(`${this._dataUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._checkStatus(res));\n  }\n};\n\nconst api = new Api(apiConfig);\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}